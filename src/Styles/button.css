/* -----------------Content Board----------------------- */
/* 

attributes
iconOnly → If we only want to show an icon
disabled → If we want to disable the btn

*/
/* ----------------------------------------------------- */

/* ========= Base Styling ========= */
@import "./main.css";

.btn {
  position: relative;
  border: none;
  background-color: var(--color-primary);
  color: var(--color-neutral-100);
  transition: background-color 0.5s;

  &:hover {
    background-color: color-mix(in hsl, var(--color-primary) 100%, var(--color-neutral-900) 10%);
  }

  /* SIZE */
  &.sm {
    font-size: var(--font-size-sm);
    padding: var(--spacing-50) var(--spacing-75);
    border-radius: var(--radius-sm);
  }

  &.md {
    font-size: var(--font-size-md);
    padding: var(--spacing-50) var(--spacing-75);
    border-radius: var(--radius-md);
  }
  &.lg {
    font-size: var(--font-size-base);
    padding: var(--spacing-75) var(--spacing-100);
    border-radius: var(--radius-lg);
  }

  &.emphasised {
    background-color: var(--color-secondary);
    color: var(--);
  }

  &.secondary {
    background-color: var(--color-secondary);

    &:hover {
      background-color: color-mix(in hsl, var(--color-secondary) 100%, var(--color-neutral-900) 1%);
    }
  }

  &.tertiary {
    background-color: transparent;
    color: var(--color-neutral-900);

    &:hover {
      color: var(--color-primary);
      text-decoration: underline;
      text-underline-offset: 0.3rem;
    }
  }

  &.btn[iconOnly] {
    &:not(span, i, svg, img) {
      font-size: 0;
    }

    &:has(span, i, svg, img) {
      size: portrait;
    }
  }

  &.btn[disabled] {
    background-color: var(--color-neutral-200);
    color: var(--color-neutral-400);

    /* Remove BG if user have tertiary applied */
    &.tertiary {
      background-color: transparent;
    }
    cursor: not-allowed;
  }
}

/* Btn with an icon in it */
[class^=".btn"]:has(i, span, svg, img) {
  display: flex;
  align-items: center;
  width: fit-content;
  gap: 0.5rem;
  white-space: nowrap;

  /* Styles apply at small */
  &.btn-sm {
    & > span,
    & > i,
    & > svg,
    & > img {
      width: 0.75rem;
    }
  }

  /* Styles apply at small */
  &.btn-md {
    & > span,
    & > i,
    & > svg,
    & > img {
      width: 1rem;
    }
  }
  /* Styles apply at small */
  &.btn-lg {
    & > span,
    & > i,
    & > svg,
    & > img {
      width: 1.2rem;
    }
  }
}

/* ========= GENERALL CSS RULES  ========= */
[class^="btn"]:has(i, span, svg, img) {
  display: flex;
  align-items: center;
  width: fit-content;
  gap: var(--spacing-50);
  white-space: nowrap;

  &.sm > *:is(i, span, svg, img) {
    width: var(--icon-size-sm-w);
    height: var(--icon-size-sm-h);
  }
  &.md > *:is(i, span, svg, img) {
    width: var(--icon-size-lg-w);
    height: var(--icon-size-lg-h);
  }
  &.lg > *:is(i, span, svg, img) {
    width: var(--icon-size-lg-w);
    height: var(--icon-size-lg-h);
  }
}

[class^="btn"]:is([disabled]) {
  transition: transform ease-in 0.15s;
  cursor: not-allowed;
}

[class^="btn"]:not([disabled]) {
  transition: transform ease-in 0.15s;
  cursor: pointer;
}

[class^="btn"]:active:not([disabled]) {
  transform: scale(0.95);
}
